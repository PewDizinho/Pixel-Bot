const { Events, EmbedBuilder, ActionRowBuilder, StringSelectMenuBuilder, ModalBuilder, TextInputBuilder, TextInputStyle, ButtonBuilder, ButtonStyle } = require('discord.js');
const { channelsId, defaultFooter } = require('../config.json');
module.exports = {
    name: Events.InteractionCreate,
    once: false,
    execute(interaction) {
        if (interaction.isStringSelectMenu()) {
            const selected = interaction.values.join(', ');

            console.log(interaction.customId);
            switch (interaction.customId) {
                case 'info':
                    var embed, row;
                    switch (selected) {
                        case "pixel_store":
                            embed = new EmbedBuilder()
                                .setColor(0x0099FF)
                                .setTitle('Pixel Store')
                                .setImage('https://media.discordapp.net/attachments/1052329282069872650/1052329370305450115/Pixel_Store.png?width=473&height=473')
                                .setDescription('A Pixel Store √© o nosso site onde voc√™ pode vender seu trabalho no minecraft (como constru√ß√µes, mods, plugins, scripts, skripts, texturas ou outros itens de design) para que donos de servidores comprem! Infelizmente, ainda estamos desenvolvendo o site, mas fique esperto! Iremos anunciar qualquer adi√ß√£o no canal <#891465741851848725>!');
                            row = new ActionRowBuilder()
                                .addComponents(
                                    new StringSelectMenuBuilder()
                                        .setCustomId('info')
                                        .setPlaceholder('Selecione algo!')
                                        .setMinValues(1)
                                        .setMaxValues(1)
                                        .addOptions([
                                            {
                                                label: 'Pixel Community',
                                                description: 'Mais informa√ß√µes sobre nossa comunidade!',
                                                value: 'pixel_community',
                                            }
                                        ]),
                                );
                            break;
                        case "pixel_community":
                            embed = new EmbedBuilder()
                                .setColor(0x0099FF)
                                .setTitle('Pixel Community')
                                .setImage('https://media.discordapp.net/attachments/1052329282069872650/1052329369890205787/Pixel_Community.png?width=473&height=473')
                                .setDescription('A Pixel Community √©, como nosso nome j√° diz, a nossa comunidade! Onde donos de outros servidores podem se ajudar na cria√ß√£o e desenvolvimento de projetos envolvendo minecraft! Tem alguma d√∫vida? Acha que consegue ajudar algu√©m? Nossa comunidade √© formada por voc√™s, ent√£o contamos com voc√™s para fazer dela um lugar incr√≠vel para todos!');
                            row = new ActionRowBuilder()
                                .addComponents(
                                    new StringSelectMenuBuilder()
                                        .setCustomId('info')
                                        .setPlaceholder('Selecione algo!')
                                        .setMinValues(1)
                                        .setMaxValues(1)
                                        .addOptions([
                                            {
                                                label: 'Pixel Store',
                                                description: 'Mais informa√ß√µes sobre nossa loja virtual!',
                                                value: 'pixel_store',
                                            }
                                        ]),
                                );

                            break;

                    }
                    interaction.update({ content: '', ephemeral: false, embeds: [embed], components: [row] });

                    break;
                case 'createItem_category':
                    //Verifica√ß√£o pra se j√° foi cadastrado ou n√£o, se n√£o for, manda pra tela de cadastro
                    const modal = new ModalBuilder()
                        .setCustomId('item_submit')
                        .setTitle(`Nova postagem ${selected.charAt(0).toUpperCase() + selected.slice(1)}`);
                    const itemname = new TextInputBuilder()
                        .setCustomId('nome')
                        .setLabel('Qual o nome do seu item?')
                        .setPlaceholder('Ex: "Plugin de Teste')
                        .setStyle(TextInputStyle.Short);

                    const version = new TextInputBuilder()
                        .setCustomId('version')
                        .setLabel('Qual a vers√£o do seu item?')
                        .setPlaceholder('Ex: "1.12.2" ou "1.8 - 1.12.2"')
                        .setStyle(TextInputStyle.Short);
                    const file = new TextInputBuilder()
                        .setCustomId('file_URL')
                        .setLabel('URL para download do seu item')
                        .setPlaceholder("Use MEDIAFIRE, DRIVE ou DROPBOX de prefer√™ncia")
                        .setStyle(TextInputStyle.Short);
                    const description = new TextInputBuilder()
                        .setCustomId('description')
                        .setLabel('Uma breve descri√ß√£o do item')
                        .setPlaceholder('Ex: "Esse plugin √© perfeito para aqueles que precisam de um plugin de teste!"')
                        .setStyle(TextInputStyle.Paragraph);
                    const itemtype = new TextInputBuilder()
                        .setCustomId('itemType')
                        .setLabel('Tipo de item (N√ÉO MEXER)')
                        .setPlaceholder('Ex: "Plugin')
                        .setValue(selected.charAt(0).toUpperCase() + selected.slice(1))
                        .setStyle(TextInputStyle.Short);
                    modal.addComponents(new ActionRowBuilder().addComponents(itemname), new ActionRowBuilder().addComponents(version), new ActionRowBuilder().addComponents(file), new ActionRowBuilder().addComponents(description), new ActionRowBuilder().addComponents(itemtype));
                    interaction.showModal(modal);
                    break;
            }
        } else if (interaction.isModalSubmit()) {
            switch (interaction.customId) {
                case 'cadastro_vendedor':
                    var embed = new EmbedBuilder()
                        .setColor(0x0099FF)
                        .setTitle('Cadastro Vendedor')
                        .setDescription('Username \`\`\` ' + interaction.member.user.tag + '\`\`\`\n\nNick \`\`\`' + interaction.fields.getTextInputValue("nick") + '\`\`\`\n\nDescri√ß√£o\`\`\`' + interaction.fields.getTextInputValue("description") + '\`\`\`\n ')
                        .setFooter({ text: `| ‚ùé Negar | ‚úÖ Aceitar | üî∞ Editar |`, iconURL: 'https://media.discordapp.net/attachments/1052329282069872650/1052329371165274132/Pixel_Coin_Blue.png?width=675&height=675' });
                    interaction.reply({ content: "Sua solicita√ß√£o foi enviada para nossa equipe da staff! Irei te avisar na DM quando ela for aceita.", ephemeral: true });
                    interaction.client.channels.cache.find(channel => channel.id == channelsId.verification.vendedores).send({ embeds: [embed] }).then(msg => { msg.react("‚úÖ"); msg.react("‚ùé"); msg.react("üî∞"); });
                    break;
                case 'item_submit':
                    const row = new ActionRowBuilder()
                        .addComponents(
                            new ButtonBuilder()
                                .setCustomId('aceitar')
                                .setLabel('Aceitar')
                                .setStyle(ButtonStyle.Success),
                            new ButtonBuilder()
                                .setCustomId('negar')
                                .setLabel('Negar')
                                .setStyle(ButtonStyle.Danger),
                            new ButtonBuilder()
                                .setCustomId('editar')
                                .setLabel('Editar')
                                .setStyle(ButtonStyle.Primary),
                        );
                    var embed = new EmbedBuilder()
                        .setColor(0x0099FF)
                        .setTitle('Solicita√ß√£o de item')
                        .setDescription('Username \`\`\`' + interaction.member.user.tag + '\`\`\`\n\nNome do Item \`\`\`' + interaction.fields.getTextInputValue("nome") + '\`\`\`\n\nVers√£o\`\`\`' + interaction.fields.getTextInputValue("version") + '\`\`\`\n ' + '\nDescri√ß√£o\`\`\`' + interaction.fields.getTextInputValue("description") + '\`\`\`\n' + `\n[Link](${interaction.fields.getTextInputValue("file_URL")})\`\`\`` + interaction.fields.getTextInputValue("file_URL") + '\`\`\`\n ' + '\nTipo de item\`\`\`' + interaction.fields.getTextInputValue("itemType") + '\`\`\`\n ')
                        .setFooter(defaultFooter);
                    interaction.reply({ content: "Sua solicita√ß√£o foi enviada para nossa equipe da staff! Irei te avisar na DM quando ela for aceita.", ephemeral: true });
                    interaction.client.channels.cache.find(channel => channel.id == channelsId.verification.items).send({ embeds: [embed], components: [row] });
                    break;
            }

        }

    },
};